<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>memory on Sy Tran's blog</title><link>http://sytranvn.dev/tags/memory/</link><description>Recent content in memory on Sy Tran's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 14 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://sytranvn.dev/tags/memory/index.xml" rel="self" type="application/rss+xml"/><item><title>Allocation</title><link>http://sytranvn.dev/posts/allocation/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate><guid>http://sytranvn.dev/posts/allocation/</guid><description>Allocation in V8 Link to heading V8 allocate C free store using malloc and free.
void* Malloced::New(size_t size) { ASSERT(NativeAllocationChecker::allocation_allowed()); void* result = malloc(size); if (result == NULL) V8::FatalProcessOutOfMemory(&amp;#34;Malloced operator new&amp;#34;); return result; } void Malloced::Delete(void* p) { free(p); } Besides of that, V8 defined a PreallocatedStorage (double linked list) to manage allocated memorry. link chunks unlink chunks When we need to allocate some memorry, first V8 will find available memorry chunk in free_list_ that fit before call Malloced::New() to allocate new memorry.</description></item></channel></rss>
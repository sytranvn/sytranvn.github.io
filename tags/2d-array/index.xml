<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2d-Array on sytranvn.dev</title><link>http://sytranvn.dev/tags/2d-array/</link><description>Recent content in 2d-Array on sytranvn.dev</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 23 Mar 2024 11:11:12 +0700</lastBuildDate><atom:link href="http://sytranvn.dev/tags/2d-array/index.xml" rel="self" type="application/rss+xml"/><item><title>Modify Element in Zig 2D Array</title><link>http://sytranvn.dev/posts/modify-element-in-zig-array/</link><pubDate>Sat, 23 Mar 2024 11:11:12 +0700</pubDate><guid>http://sytranvn.dev/posts/modify-element-in-zig-array/</guid><description>So I&amp;rsquo;m learning Zig and trying to write a Arkanoid game in Zig.
I have to iterate through 2D array of bricks, check collision and update each brick status. This is easy to do with high level languages. With C++ vector, we can use range-based for loop like this.
vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; items; for (auto &amp;amp; row : items) { for (auto &amp;amp;item: row) { item += 1; } } With C, we have to do this old fashion way by accessing each brick by i and j indexes.</description></item></channel></rss>
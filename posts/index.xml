<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on sytranvn.dev</title><link>http://sytranvn.dev/posts/</link><description>Recent content in Posts on sytranvn.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 28 Mar 2024 21:35:21 +0700</lastBuildDate><atom:link href="http://sytranvn.dev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>How to access VNPT iGate Modem</title><link>http://sytranvn.dev/posts/vnpt-igate-modem/</link><pubDate>Thu, 28 Mar 2024 21:35:21 +0700</pubDate><guid>http://sytranvn.dev/posts/vnpt-igate-modem/</guid><description>When I try to access my gateway IP using Chrome, this error shows.
This site can‚Äôt provide a secure connection 192.168.1.1 uses an unsupported protocol. ERR_SSL_VERSION_OR_CIPHER_MISMATCH Unsupported protocol The client and server don&amp;rsquo;t support a common SSL protocol version or cipher suite.
The full URL I got redirected to was https://192.168.1.1/cgi-bin/index.asp. So this modem provides a HTTPS web interface but somehow that certificate is not a valid one. Normally, in case a certificate was self signed, we still have an advanced button to proceed.</description></item><item><title>Modify Element in Zig 2D Array</title><link>http://sytranvn.dev/posts/modify-element-in-zig-array/</link><pubDate>Sat, 23 Mar 2024 11:11:12 +0700</pubDate><guid>http://sytranvn.dev/posts/modify-element-in-zig-array/</guid><description>So I&amp;rsquo;m learning Zig and trying to write a Arkanoid game in Zig.
I have to iterate through 2D array of bricks, check collision and update each brick status. This is easy to do with high level languages. With C++ vector, we can use range-based for loop like this.
vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt; items; for (auto &amp;amp; row : items) { for (auto &amp;amp;item: row) { item += 1; } } With C, we have to do this old fashion way by accessing each brick by i and j indexes.</description></item><item><title>Stop Writing Bash for Loop</title><link>http://sytranvn.dev/posts/stop-writing-bash-for-loop/</link><pubDate>Wed, 24 Jan 2024 15:39:19 +0700</pubDate><guid>http://sytranvn.dev/posts/stop-writing-bash-for-loop/</guid><description>If you love CLI and run a lot of commands, write a lot of bash scripts, you probably know bash for loop. For example to count from 1 to 10, we can write for i in {1..10}; do echo $i; done . Or if we have an array of items, and want to iterate over it, we can write
items=(1 2 3 4 5) for item in ${items[@]}; do echo $item; done Easy-breezy.</description></item><item><title>8 Terminal Movement Shortcuts You Should Know</title><link>http://sytranvn.dev/posts/8-terminal-movement-key-strokes-you-should-know/</link><pubDate>Fri, 27 Oct 2023 17:29:33 +0700</pubDate><guid>http://sytranvn.dev/posts/8-terminal-movement-key-strokes-you-should-know/</guid><description>1. Move to end Link to heading ^e Example: From current cursor position move to end of line
‚ñåecho hello world ^e echo hello world‚ñå 2. Move to beginning Link to heading ^a Example: From last position move to beginning
^a ‚ñåecho hello world 3. Move to next word Link to heading alt-f Example: From last position move cursor to after hello position</description></item><item><title>First Time Make Pho</title><link>http://sytranvn.dev/posts/first-time-make-pho/</link><pubDate>Fri, 29 Sep 2023 19:27:02 +0700</pubDate><guid>http://sytranvn.dev/posts/first-time-make-pho/</guid><description>I really like cooking but unfortunately I am not a good cook. The only dishes I really know is Vietnamese omelette egg with spring onion and boiled pork dip in fish sauce. I tried some other recipes before such as Dong vermicelli, or meat poached but I can&amp;rsquo;t recall their recipes. Maybe it&amp;rsquo;s because I don&amp;rsquo;t practice enough or the recipes are so complex.
Today I want to make Pho for my wife and daughter.</description></item><item><title>ESM for Production</title><link>http://sytranvn.dev/posts/esm-for-production/</link><pubDate>Fri, 01 Sep 2023 10:01:30 +0700</pubDate><guid>http://sytranvn.dev/posts/esm-for-production/</guid><description>The JavaScript ecosystem is quickly moving toward publishing ECMAScript (ES) modules (ESM) instead of CommonJS modules. To keep up with new JS changes, I often learn and play with the new ones in my side projects. But the real question is are they ready for production yet?
About my last big production ready application Link to heading In my former company, I developed an application using NodeJS + GraphQL as backend for frontent (BFF) and use React for rendering UI.</description></item><item><title>C√†i ƒë·∫∑t Zalo Tr√™n Ubuntu</title><link>http://sytranvn.dev/posts/zalo-tren-ubuntu/</link><pubDate>Sun, 27 Aug 2023 17:10:55 +0700</pubDate><guid>http://sytranvn.dev/posts/zalo-tren-ubuntu/</guid><description>Sau ƒë√¢y m√¨nh s·∫Ω h∆∞·ªõng d·∫´n c√°ch c√†i ƒë·∫∑t Zalo tr√™n Ubuntu v√† Steam Proton, t·∫°i th·ªùi ƒëi·ªÉm hi·ªán t·∫°i, m√¨nh ƒëang s·ª≠ d·ª•ng b·∫£n l√† 23.8.4
Y√™u c·∫ßu Link to heading B·∫°n c√≥ c√†i ƒë·∫∑t s·∫µn Steam T·∫£i file c√†i ƒë·∫∑t zalo Link to heading D√†nh cho c√°ch b·∫°n s·ª≠ d·ª•ng tr√¨nh duy·ªát Google Chrome C√°c b·∫°n h√£y v√†o trang ch·ªß https://zalo.</description></item><item><title>The Way I Math With Hugo</title><link>http://sytranvn.dev/posts/the-way-i-math-with-hugo/</link><pubDate>Sat, 19 Aug 2023 12:49:01 +0700</pubDate><guid>http://sytranvn.dev/posts/the-way-i-math-with-hugo/</guid><description>Recently I have joined a course to relearn some linear algebra. What I didn&amp;rsquo;t have any intuition during college. I want to do exercises and also add them to this site for content üòÑ I am using hugo-coder theme and it comes with katex support. When never I need to write some math, I just need to enable math front matter in that post.
+++ math = true +++ Hugo will include katex script tag to the page so any texts between $ .</description></item><item><title>Fixing Ubuntu 22.04 LTS Bluetooth Headphone Issue</title><link>http://sytranvn.dev/posts/fixing-ubuntu-22-04-bluetooth-headphone-issue/</link><pubDate>Mon, 17 Jul 2023 23:03:55 +0700</pubDate><guid>http://sytranvn.dev/posts/fixing-ubuntu-22-04-bluetooth-headphone-issue/</guid><description>Recently, I setup Ubuntu 22.04 on my new laptop. Everything work, except my bluetooth headphone. I have struggled to play any sound on my Sony WF1000XM3 for weeks even though my other bluetooth speaker works just fine üòû
Anytime I try to connect to my headphone, it appears to be connected, but I cannot hear the notification from my headphone. And in Sound settings, output devices or Pavulcontrol, my headphone didn&amp;rsquo;t show up either.</description></item><item><title>First Trip Aboard</title><link>http://sytranvn.dev/posts/travels/first-trip-aboard/</link><pubDate>Tue, 27 Jun 2023 15:53:09 +0700</pubDate><guid>http://sytranvn.dev/posts/travels/first-trip-aboard/</guid><description>Vi·∫øt v·ªÅ chuy·∫øn ƒëi ƒë·∫ßu ti√™n ra n∆∞·ªõc ngo√†i. L·∫Ω dƒ© nhi√™n nh·ªØng g√¨ t·∫≠n m·∫Øt t√¥i ƒë∆∞·ª£c ch·ª©ng ki·∫øn ƒë·ªÅu khi·∫øn t√¥i b·∫•t ng·ªù, v√¨ m·ªçi th·ª© th·∫≠t kh√°c v·ªõi qu√™ h∆∞∆°ng Vi·ªát Nam c·ªßa t√¥i. M·∫∑c d√π t√¥i vi·∫øt r·∫•t t·ªá, nh∆∞ng k·ª∑ ni·ªám th·∫≠t kh√≥ qu√™n n√†y, t√¥i s·∫Ω c·ªë g·∫Øng ƒë·ªÉ vi·∫øt m·ªôt c√°ch ƒë·∫ßy ƒë·ªß nh·∫•t v·ªÅ nh·ªØng tr·∫£i nghi·ªám c·ªßa m√¨nh.
Chu·∫©n b·ªã Link to heading ƒê√¢y l√† chuy·∫øn du l·ªãch c·ªßa c√¥ng ty ƒë·∫øn Th√°i Lan v√† t√¥i ƒë∆∞·ª£c t√†i tr·ª£ ho√†n to√†n chi ph√≠, ƒëi·ªÅu duy nh·∫•t t√¥i c·∫ßn chu·∫©n b·ªã l√† h·ªô chi·∫øu c√¥ng d√¢n v√† m·ªôt t√¢m h·ªìn th·∫≠t ƒë·∫πp.</description></item><item><title>Configure kitty terminal on both Linux and MacOS</title><link>http://sytranvn.dev/posts/configure-kitty-terminal-cross-operating-systems/</link><pubDate>Sat, 03 Jun 2023 18:26:51 +0700</pubDate><guid>http://sytranvn.dev/posts/configure-kitty-terminal-cross-operating-systems/</guid><description>Kitty is cross platform and I use it on both Linux home PC and company Macbook. Sharing the configuration and reuse it is crutial because Kitty is highly scriptable. And changing the configuration once should affect on both of my computers.
Sharing the configuration Link to heading For this task, I use git to manage the ~/.config directory. Where most of tools configurations live. For example kitty, neovim, direnv.</description></item><item><title>Fix npm cannot install packages</title><link>http://sytranvn.dev/posts/fix-npm-cannot-install-packages/</link><pubDate>Mon, 29 May 2023 19:53:52 +0700</pubDate><guid>http://sytranvn.dev/posts/fix-npm-cannot-install-packages/</guid><description>Recently I experienced an issue with NPM, I couldn&amp;rsquo;t install any packages. I found some suggestions on google to upgrade npm but npm install -g npm didn&amp;rsquo;t work either. After some debugging and searching on npm repo issues, I finally found a temporary solution.
If you need the solution, you can go straight to Solution and come back to read my findings later while npm doing what it needs to do.</description></item><item><title>Debug flask app with Neovim</title><link>http://sytranvn.dev/posts/debug-flask-app-with-neovim/</link><pubDate>Fri, 14 Apr 2023 23:46:03 +0700</pubDate><guid>http://sytranvn.dev/posts/debug-flask-app-with-neovim/</guid><description>After installing Neovim and some plugins. Now I want to try debugging Python project. I created a small Flask app from template with a few apis. And here&amp;rsquo;s the result. Amazing!
Here&amp;rsquo;s how to Link to heading Prepare a Flask app Link to heading I use this template to generate a Flask app repo.
Then I clone my new repo and install the requirements.</description></item><item><title>Start using Neovim</title><link>http://sytranvn.dev/posts/start-using-neovim/</link><pubDate>Thu, 13 Apr 2023 23:29:48 +0700</pubDate><guid>http://sytranvn.dev/posts/start-using-neovim/</guid><description>TLDR Link to heading I get bored of using VS Code and want to try Neovim and I love it.
Installing Neovim Link to heading I have tried to use Neovim but it was not working well with my vim configurations. And now I try it again with no configs.
First of all, even though I like using vim, but during development I still use VSCode more as main IDE.</description></item><item><title>Why you should use Javascripts for scripting</title><link>http://sytranvn.dev/posts/why-you-should-use-mjs-file-for-scripting/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><guid>http://sytranvn.dev/posts/why-you-should-use-mjs-file-for-scripting/</guid><description>I like to write small scripts, but used to suggle when I want to use Javascript to fetch API data, or use some helper packages. Then I go with Python instead. But things have changed. With the supports of ES module and fetch and node:module API. It is much easier now since I feel more comfortable using JS.
Unlike normal js files, node treats mjs files as ECMAScript modules. So it means you can use any supported ES-next features w/o a transpiler like Babel.</description></item><item><title>Deploy ML model to Javascripts</title><link>http://sytranvn.dev/posts/deploy-ml-model-to-javascripts/</link><pubDate>Sat, 18 Jun 2022 00:00:00 +0000</pubDate><guid>http://sytranvn.dev/posts/deploy-ml-model-to-javascripts/</guid><description>Deploy trained model using Octave or Tensorflow to JS application.
The idea Link to heading When we train a model, the outcome is ussually the weights of hidden layers. All predictions will be calculated by inputs and the weights.
-&amp;gt; train model with training set -&amp;gt; export model&amp;#39;s weights -&amp;gt; load exported weights to JS -&amp;gt; normalize input data and predict Octave model to csv Link to heading Setup a model with tensorflow Link to heading Save weights Link to heading Save entire model Link to heading</description></item><item><title>Turbo fan part 1</title><link>http://sytranvn.dev/posts/turbo-fan-1/</link><pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate><guid>http://sytranvn.dev/posts/turbo-fan-1/</guid><description>function Obj(x, y) { this.x = x this.y = y this.add = function(other) { this.x += other.x this.y += other.y } } var N = arguments[0] var obj = new Obj(1, 1) for (let x = 1, y = 1; x &amp;lt; N; x++, y+=2) { var other = new Obj(x, y) obj.add(other) if (obj.x &amp;gt; 50000) { obj.z = obj.x + obj.y } } d8 --trace-opt --trace-deopt opt.js -- 50000 // x = 1134 [marking 0x287a00253a2d &amp;lt;JSFunction (sfi = 0x287a00253709)&amp;gt; for optimized recompilation, reason: hot and stable] [compiling method 0x287a00253a2d &amp;lt;JSFunction (sfi = 0x287a00253709)&amp;gt; (target TURBOFAN) using TurboFan OSR] [optimizing 0x287a00253a2d &amp;lt;JSFunction (sfi = 0x287a00253709)&amp;gt; (target TURBOFAN) - took 0.</description></item><item><title>Debug V8 part 2</title><link>http://sytranvn.dev/posts/debug-v8-part-2/</link><pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate><guid>http://sytranvn.dev/posts/debug-v8-part-2/</guid><description>In previous part, we have learnt how to debug d8 with lldb. In this part we still use our debug.js script. But we&amp;rsquo;ll add an other parameter to d8 before running process.
lldb -- d8 --parse-only debug.js With parse-only flag, we will forcus on how d8 parse source content and turn into lexical input elements.
Let&amp;rsquo;s add a breakpoint in v8::Shell::RunMain function and jump to it.
(lldb) b v8::Shell::RunMain (lldb) run frame #0: 0x000000010004ba68 d8`v8::Shell::RunMain(isolate=0x0000000118110000, last_run=true) at d8.</description></item><item><title>Debug V8 part 1</title><link>http://sytranvn.dev/posts/debug-v8-part-1/</link><pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate><guid>http://sytranvn.dev/posts/debug-v8-part-1/</guid><description>3 things to do before debugging V8 Link to heading Build d8 with debug flags from V8 source Install lldb A javascript file Build d8 with debug flags from V8 source Link to heading If you haven&amp;rsquo;t tried building V8 before, take a look at my other blog on how to build V8 from source on Ubuntu and Mac M1. Now we just need to make sure the d8 binary is built with debug flag instead of release.</description></item><item><title>Allocation</title><link>http://sytranvn.dev/posts/allocation/</link><pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate><guid>http://sytranvn.dev/posts/allocation/</guid><description>Allocation in V8 Link to heading V8 allocate C free store using malloc and free.
void* Malloced::New(size_t size) { ASSERT(NativeAllocationChecker::allocation_allowed()); void* result = malloc(size); if (result == NULL) V8::FatalProcessOutOfMemory(&amp;#34;Malloced operator new&amp;#34;); return result; } void Malloced::Delete(void* p) { free(p); } Besides of that, V8 defined a PreallocatedStorage (double linked list) to manage allocated memorry. link chunks unlink chunks When we need to allocate some memorry, first V8 will find available memorry chunk in free_list_ that fit before call Malloced::New() to allocate new memorry.</description></item><item><title>Token</title><link>http://sytranvn.dev/posts/token/</link><pubDate>Wed, 06 Oct 2021 00:00:00 +0000</pubDate><guid>http://sytranvn.dev/posts/token/</guid><description>If you don&amp;rsquo;t know how it works, find out. If you&amp;rsquo;re not sure if it will work, try it. If it doesn&amp;rsquo;t make sense, play with it until it does. If it&amp;rsquo;s not broken, break it. If it might not be true, find out.
Seth Godin
Token Link to heading All tokens are defined by a macro TOKEN_LIST. It takes a list of 3 macros M all of which satisfy the same signature M(name, string, precedence), where name is the symbolic token name, string is the corresponding syntactic symbol (or NULL, for literals), and precedence is the precedence (or 0).</description></item><item><title>Build v8 from source on Apple M1</title><link>http://sytranvn.dev/posts/build-v8-from-source-on-apple-m1/</link><pubDate>Mon, 19 Apr 2021 00:00:00 +0000</pubDate><guid>http://sytranvn.dev/posts/build-v8-from-source-on-apple-m1/</guid><description>Follow up Build v8 from source on Ubuntu 20.04. Today we&amp;rsquo;re gonna build v8 source on an Apple M1 chip MacOS.
Required Link to heading bash shell git Xcode python2 I set up the V8 source code inside ~/Code/ folder and use it throughout this article. You can change it to your desired folder.
Prepare the tools and source code Link to heading First we need to get the depot tools bundle from google.</description></item><item><title>What I learned from reading reactjs tests</title><link>http://sytranvn.dev/posts/what-i-learned-from-reading-reactjs-tests/</link><pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate><guid>http://sytranvn.dev/posts/what-i-learned-from-reading-reactjs-tests/</guid><description>First of all, I think React DOM is one of the most interesting part in React code base. I&amp;rsquo;m not sure if it is correct but whatever, stop thinking and start diving.
This is the React-DOM test file at the time I&amp;rsquo;m writing this post. If you find latest version is different from what mentioned in this post please feel free to make a PR.
ReactDOM should bubble onSubmit</description></item><item><title>Build v8 from source on Ubuntu 20.04</title><link>http://sytranvn.dev/posts/build-v8-from-source/</link><pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate><guid>http://sytranvn.dev/posts/build-v8-from-source/</guid><description>Have you ever asked what does V8 do? Here&amp;rsquo;s how to build a V8 of your own from source code. See what it can do and even have fun with it.
Required Link to heading bash shell git I set up the V8 source code inside ~/Code/ folder and use it throughout this article. You can change it to your desired folder.
Prepare the tools and source code Link to heading We need to get the depot tools bundle from google.</description></item><item><title>Misc</title><link>http://sytranvn.dev/posts/misc/</link><pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate><guid>http://sytranvn.dev/posts/misc/</guid><description>Some tricks I found when dealing with V8 giant code base
Macros, macros every where Link to heading Having problem understanding v8 macros? Add this where ever you want static const int IAmHere = 1; And run g++ -g -Wall -I. -Iinclude -I... header.h -E -D DEBUG &amp;gt; header.h.o Search for IAmHere in header.h.o file generated Have fun To be continued The do while (false) macro Link to heading #define ASSEMBLE_BINOP(asm_instr) \ do { \ if (HasAddressingMode(instr)) { \ size_t index = 1; \ Operand right = i.</description></item><item><title>V8 adventure</title><link>http://sytranvn.dev/posts/v8-adventure/</link><pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate><guid>http://sytranvn.dev/posts/v8-adventure/</guid><description>Study the v8 source code from the beginning and more.
Why V8 and why from the beginning? Link to heading I&amp;rsquo;m working mostly as Javascript developer, but I&amp;rsquo;m also interested in C++ source code. V8 is perfect land for me to explorer interesting C++ concepts and to understand Javascript better. Current code base of V8 is huge, I cannot jump right into it and learn everything. So I decide to go back in time to see V8 in its initial shape.</description></item></channel></rss>